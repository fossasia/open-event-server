from django.db import models

from discount_codes.models import DiscountCode
from event_sub_topics.models import EventSubTopic
from event_topics.models import EventTopic
from event_types.models import EventType
from groups.models import Group


# Create your models here.
class Event(models.Model):
    identifier = models.CharField(max_length=255)
    name = models.CharField(max_length=255)
    external_event_url = models.URLField(blank=True, null=True)
    logo_url = models.URLField(blank=True, null=True)
    starts_at = models.DateTimeField()
    ends_at = models.DateTimeField()
    timezone = models.CharField(max_length=255)
    latitude = models.FloatField(blank=True, null=True)
    longitude = models.FloatField(blank=True, null=True)
    location_name = models.CharField(max_length=255, blank=True, null=True)
    searchable_location_name = models.CharField(max_length=255, blank=True, null=True)
    description = models.TextField(blank=True, null=True)
    original_image_url = models.URLField(blank=True, null=True)
    thumbnail_image_url = models.URLField(blank=True, null=True)
    large_image_url = models.URLField(blank=True, null=True)
    icon_image_url = models.URLField(blank=True, null=True)
    owner_name = models.CharField(max_length=255, blank=True, null=True)
    is_map_shown = models.BooleanField(default=True, null=True)
    owner_description = models.CharField(max_length=255, blank=True, null=True)
    is_sessions_speakers_enabled = models.BooleanField(null=True, blank=True)
    privacy = models.CharField(max_length=255, blank=True, null=True)
    state = models.CharField(max_length=255, blank=True, null=True)
    event_type = models.ForeignKey(EventType, on_delete=models.SET_NULL, null=True, blank=True)
    event_topic = models.ForeignKey(EventTopic, on_delete=models.SET_NULL, null=True, blank=True)
    event_sub_topic = models.ForeignKey(EventSubTopic, on_delete=models.SET_NULL, null=True, blank=True)
    ticket_url = models.URLField(blank=True, null=True)
    code_of_conduct = models.TextField(blank=True, null=True)
    schedule_published_on = models.DateTimeField(null=True, blank=True)
    is_ticketing_enabled = models.BooleanField(null=True, blank=True)
    deleted_at = models.DateTimeField(null=True, blank=True)
    payment_country = models.CharField(max_length=255, blank=True, null=True)
    payment_currency = models.CharField(max_length=255, blank=True, null=True)
    paypal_email = models.EmailField(blank=True, null=True)
    is_tax_enabled = models.BooleanField(null=True, blank=True)
    can_pay_by_paypal = models.BooleanField(default=False)
    can_pay_by_stripe = models.BooleanField(default=False)
    can_pay_by_cheque = models.BooleanField(default=False)
    can_pay_by_bank = models.BooleanField(default=False)
    can_pay_onsite = models.BooleanField(default=False)
    cheque_details = models.TextField(blank=True, null=True)
    bank_details = models.TextField(blank=True, null=True)
    onsite_details = models.TextField(blank=True, null=True)
    created_at = models.DateTimeField(null=True, blank=True)
    is_sponsors_enabled = models.BooleanField(default=False, null=True, blank=True)
    ical_url = models.URLField(blank=True, null=True)
    pentabarf_url = models.URLField(blank=True, null=True)
    xcal_url = models.URLField(blank=True, null=True)
    has_owner_info = models.BooleanField(null=True, blank=True)
    discount_code = models.ForeignKey(DiscountCode, on_delete=models.SET_NULL, null=True, blank=True)
    refund_policy = models.TextField(blank=True, null=True)
    is_stripe_linked = models.BooleanField(null=True, blank=True)
    online = models.BooleanField(default=False)
    is_donation_enabled = models.BooleanField(null=True, blank=True)
    is_featured = models.BooleanField(default=False)
    can_pay_by_omise = models.BooleanField(default=False)
    is_ticket_form_enabled = models.BooleanField(default=True)
    can_pay_by_alipay = models.BooleanField(default=False)
    show_remaining_tickets = models.BooleanField(default=False)
    is_billing_info_mandatory = models.BooleanField(default=False)
    can_pay_by_paytm = models.BooleanField(default=False)
    is_promoted = models.BooleanField(default=False)
    is_demoted = models.BooleanField(default=False)
    group = models.ForeignKey(Group, on_delete=models.SET_NULL, null=True, blank=True)
    after_order_message = models.TextField(blank=True, null=True)
    is_chat_enabled = models.BooleanField(default=False)
    chat_room_id = models.CharField(max_length=255, blank=True, null=True)
    document_links = models.JSONField(blank=True, null=True)
    is_document_enabled = models.BooleanField(default=False)
    is_videoroom_enabled = models.BooleanField(default=False)
    is_oneclick_signup_enabled = models.BooleanField(default=False)
    is_cfs_enabled = models.BooleanField(default=False)
    is_announced = models.BooleanField(default=False)
    completed_order_sales = models.IntegerField(null=True, blank=True)
    placed_order_sales = models.IntegerField(null=True, blank=True)
    pending_order_sales = models.IntegerField(null=True, blank=True)
    completed_order_tickets = models.IntegerField(null=True, blank=True)
    placed_order_tickets = models.IntegerField(null=True, blank=True)
    pending_order_tickets = models.IntegerField(null=True, blank=True)
    can_pay_by_invoice = models.BooleanField(default=False)
    invoice_details = models.TextField(blank=True, null=True)
    public_stream_link = models.URLField(blank=True, null=True)
    stream_loop = models.BooleanField(null=True, blank=True)
    stream_autoplay = models.BooleanField(null=True, blank=True)
    is_badges_enabled = models.BooleanField(null=True, blank=True)
