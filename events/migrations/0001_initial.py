# Generated by Django 5.0 on 2024-03-13 19:20

import django.contrib.postgres.fields.citext
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('event_topics', '0002_eventsubtopic'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('slug', models.CharField(max_length=200, null=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiscountCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', django.contrib.postgres.fields.citext.CITextField(max_length=200, null=True)),
                ('value', models.FloatField(null=True)),
                ('type', models.CharField(max_length=200, null=True)),
                ('is_active', models.BooleanField(null=True)),
                ('tickets_number', models.IntegerField(null=True)),
                ('min_quantity', models.IntegerField(null=True)),
                ('max_quantity', models.IntegerField(null=True)),
                ('valid_from', models.DateTimeField(null=True)),
                ('valid_till', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('used_for', models.CharField(max_length=200, null=True)),
                ('discount_url', models.CharField(max_length=200, null=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('marketer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=255)),
                ('external_event_url', models.URLField(blank=True, null=True)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('starts_at', models.DateTimeField()),
                ('ends_at', models.DateTimeField()),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('online', models.BooleanField(default=False)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('location_name', models.CharField(blank=True, max_length=255, null=True)),
                ('searchable_location_name', models.CharField(blank=True, max_length=255, null=True)),
                ('public_stream_link', models.CharField(blank=True, max_length=255, null=True)),
                ('stream_loop', models.BooleanField(default=False)),
                ('stream_autoplay', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_promoted', models.BooleanField(default=False)),
                ('is_demoted', models.BooleanField(default=False)),
                ('is_chat_enabled', models.BooleanField(default=False)),
                ('is_videoroom_enabled', models.BooleanField(default=False)),
                ('is_document_enabled', models.BooleanField(default=False)),
                ('document_links', models.JSONField(blank=True, null=True)),
                ('chat_room_id', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('after_order_message', models.TextField(blank=True, null=True)),
                ('original_image_url', models.URLField(blank=True, null=True)),
                ('thumbnail_image_url', models.URLField(blank=True, null=True)),
                ('large_image_url', models.URLField(blank=True, null=True)),
                ('show_remaining_tickets', models.BooleanField(default=False)),
                ('icon_image_url', models.URLField(blank=True, null=True)),
                ('owner_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_map_shown', models.BooleanField(default=False)),
                ('is_oneclick_signup_enabled', models.BooleanField(default=False)),
                ('has_owner_info', models.BooleanField(default=False)),
                ('owner_description', models.CharField(blank=True, max_length=255, null=True)),
                ('is_sessions_speakers_enabled', models.BooleanField(default=False)),
                ('is_cfs_enabled', models.BooleanField(default=False)),
                ('privacy', models.CharField(default='public', max_length=10)),
                ('state', models.CharField(default='draft', max_length=10)),
                ('is_announced', models.BooleanField(default=False)),
                ('ticket_url', models.CharField(blank=True, max_length=255, null=True)),
                ('code_of_conduct', models.CharField(blank=True, max_length=255, null=True)),
                ('schedule_published_on', models.DateTimeField(blank=True, null=True)),
                ('is_ticketing_enabled', models.BooleanField(default=False)),
                ('is_donation_enabled', models.BooleanField(default=False)),
                ('is_ticket_form_enabled', models.BooleanField(default=True)),
                ('is_badges_enabled', models.BooleanField(default=False)),
                ('payment_country', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_currency', models.CharField(blank=True, max_length=100, null=True)),
                ('paypal_email', models.CharField(blank=True, max_length=255, null=True)),
                ('is_tax_enabled', models.BooleanField(default=False)),
                ('is_billing_info_mandatory', models.BooleanField(default=False)),
                ('can_pay_by_paypal', models.BooleanField(default=False)),
                ('can_pay_by_stripe', models.BooleanField(default=False)),
                ('can_pay_by_cheque', models.BooleanField(default=False)),
                ('can_pay_by_bank', models.BooleanField(default=False)),
                ('can_pay_by_invoice', models.BooleanField(default=False)),
                ('can_pay_by_onsite', models.BooleanField(default=False)),
                ('can_pay_by_omise', models.BooleanField(default=False)),
                ('can_pay_by_alipay', models.BooleanField(default=False)),
                ('can_pay_by_paytm', models.BooleanField(default=False)),
                ('cheque_details', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_details', models.CharField(blank=True, max_length=255, null=True)),
                ('onsite_details', models.CharField(blank=True, max_length=255, null=True)),
                ('invoice_details', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('pentabarf_url', models.CharField(blank=True, max_length=255, null=True)),
                ('ical_url', models.CharField(blank=True, max_length=255, null=True)),
                ('xcal_url', models.CharField(blank=True, max_length=255, null=True)),
                ('is_sponsors_enabled', models.BooleanField(default=False)),
                ('refund_policy', models.CharField(blank=True, max_length=255, null=True)),
                ('is_stripe_linked', models.BooleanField(default=False)),
                ('completed_order_sales', models.IntegerField(default=0)),
                ('placed_order_sales', models.IntegerField(default=0)),
                ('pending_order_sales', models.IntegerField(default=0)),
                ('completed_order_tickets', models.IntegerField(default=0)),
                ('placed_order_tickets', models.IntegerField(default=0)),
                ('pending_order_tickets', models.IntegerField(default=0)),
                ('discount_code_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.discountcode')),
                ('event_sub_topic_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='event_topics.eventsubtopic')),
                ('event_topic_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='event_topics.eventtopic')),
                ('event_type_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.eventtype')),
            ],
        ),
        migrations.AddField(
            model_name='discountcode',
            name='event_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='events.event'),
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('modified_at', models.DateTimeField(null=True)),
                ('social_links', models.JSONField(null=True)),
                ('about', models.TextField(null=True)),
                ('banner_url', models.CharField(max_length=200, null=True)),
                ('logo_url', models.CharField(max_length=200, null=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('follower_count', models.IntegerField(default=0)),
                ('thumbnail_image_url', models.URLField(blank=True, null=True)),
                ('is_promoted', models.BooleanField(default=False)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='group_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.group'),
        ),
    ]
