[tool.black]
line-length = 90
target-version = ['py38']
skip-string-normalization = true
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | migrations
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 90
skip = '.venv/,migrations/,manage.py,instance.py,hook_main.py'
known_first_party = 'app'
known_third_party = 'flask'
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true

[tool.pycln]
path = "app/"
exclude = "(migrations/|.venv/)"
all = true

[tool.poetry]
name = "open-event-server"
version = "1.19.1"
description = "Open Event APIs Server"
authors = ["Fossasia: https://fossasia.org"]

[tool.poetry.dependencies]
python = "3.8.6"
pycparser = "2.20"
Flask = "1.1.2"
Flask-Limiter = "1.4"
Flask-Script = "2.0.6"
Flask-SQLAlchemy = "2.5.1"
Flask-Login = "0.5"
Flask-Scrypt = "0.1.3.6"
flask-jwt-extended = "3.25.0"
flask-celeryext = "0.3.4"
werkzeug = "2.0.1"
omise = "0.11.0"
requests-oauthlib = "1.3"
icalendar = "4.0.7"
requests = {version = "2.25.1", extras = ["security"]}
psycopg2-binary = "2.9.1"
SQLAlchemy-Utils = "0.37.8"
itsdangerous = "2.0.1"
humanize = "3.10.0"
celery = "5.1.2"
redis = "3.5.3"
apscheduler = "3.7.0"
pillow = "8.3.1"
gunicorn = "20.1.0"
boto = "2.49"
geoip2 = "4.2.0"
SQLAlchemy-Continuum = "1.3.11"
bleach = "3.3.0"
stripe = "2.58.0"
xhtml2pdf = "0.2.5"
flask-caching = "1.10.1"
forex-python = "1.6"
pycryptodome = "3.10.1"
oauth2 = "~1.9.0"
qrcode = "7.1"
python-magic = "0.4.24"
python-dotenv = "0.18.0"
python-geoip = "1.2"
"marrow.mailer" = {git = "https://github.com/LexMachinaInc/mailer.git", rev = "6933606"}
"marrow.util" = {git = "https://github.com/LexMachinaInc/util.git", rev = "d820293"}
flask-cors = "3.0.10"
python-pentabarf-xml = "0.20"
python-geoip-geolite2 = "2015.303"
pycountry = "20.7.3"
pytz = "2021.1"
diff-match-patch = "20200713"
blinker = "1.4"
envparse = "0.2"
flask-rest-jsonapi = {git = "https://github.com/fossasia/flask-rest-jsonapi.git", tag = "0.12.6.5"}
wtforms = {version = "2.3.3", extras = ["email"]}
flask-admin = "1.5.8"
google-compute-engine = "2.8.13"
factory_boy = "3.2.0"
sentry-sdk = {version = "1.2.0", extras = ["flask"]}
healthcheck = "1.3.3"
elasticsearch-dsl = "7.0.0"
flask-redis = "0.4"
SQLAlchemy = "1.3.23"
Flask-Elasticsearch = "0.2.5"
paypalrestsdk = "1.13.1"
eventlet = "0.31.0"
gevent = "21.1.2"
greenlet = "1.1.0" # Required for gevent
pyyaml = "5.4.1"
sendgrid = "6.7.1"
marshmallow = "2.21.0"
marshmallow-jsonapi = "0.23.2"
WeasyPrint = "52.5"
Flask-Babel = "2.0.0"
xmltodict = "0.12.0"
# GraphQL support
graphene-sqlalchemy = "2.3.0"
flask-graphql = "2.0.1"
graphene-sqlalchemy-filter = "1.12.2"
fastapi = "^0.66.0"
uvicorn = {extras = ["standard"], version = "^0.14.0"}
broadcaster = {extras = ["redis"], version = "^0.2.0"}
sqlalchemy-citext = "^1.8.0"
coolname = "^1.1.0"
python-slugify = "^5.0.2"
cryptography = "3.3.2" # Downgraded to avoid alpine build error
Flask-Migrate = "2.7.0"

[tool.poetry.dev-dependencies]
nose = "1.3.7"
pylint = "2.9.3"
pep8 = "1.7.1"
isort = "5.9.1"
black = "21.6b0"
pre-commit = "2.13.0"
pytype = "2021.6.17"
pycln = "0.0.4"
pyupgrade = "2.20.0"
# For testing
coverage = "5.5"
dredd_hooks = "0.2"
pytest = "6.2.4"
pytest-cov = "2.12.1"
objproxies = "0.9.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
