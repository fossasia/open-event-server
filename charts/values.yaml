## OpenEvent configuration
## Ref: https://github.com/fossasia/open-event-server
##
nameOverride: ""
fullnameOverride: ""


image: 
  repo: eventyay/open-event-server
  tag: latest
  imagePullPolicy: Always
  securityContext: {}
  imagePullSecrets: []

## Celery part of open event server
celery:
  replicas: 1
  name: opev-celery
  strategy: Recreate
  restartPolicy: Always
  storage:
    static:
      size: 100Mi
    generated:
      size: 100Mi

## Server part of open event server
server:
  replicas: 1
  servicePort: 8080
  containerPort: 8080
  name: open-event-server
  restartPolicy: Always
  storage:
    static:
      size: 100Mi
    generated:
      size: 100Mi
  
  # ComfigMap for open event server
  config:
      APP_CONFIG: config.DevelopmentConfig
      DATABASE_URL: postgresql://open_event_user:opev_pass@127.0.0.1:5432/oevent
      FLASK_APP: app.instance
      INTEGRATE_SOCKETIO: "false"
      POSTGRES_DB: open_event
      POSTGRES_PASSWORD: opev_pass
      POSTGRES_USER: open_event_user
      TEST_DATABASE_URL: postgresql://open_event_user:opev_pass@127.0.0.1:5432/opev_test

# Open event environment varibale
env:
  - name: ADMIN_EMAIL
    value: 'test@gmail.com'
  - name: ADMIN_PASSWORD
    value: '12345678'
  - name: APP_CONFIG
    valueFrom:
      configMapKeyRef:
        name: env
        key: APP_CONFIG
  - name: C_FORCE_ROOT
    value: "true"
  - name: DATABASE_URL
    valueFrom:
      configMapKeyRef:
        name: env
        key: DATABASE_URL
  - name: FLASK_APP
    valueFrom:
      configMapKeyRef:
        name: env
        key: FLASK_APP
  - name: INTEGRATE_SOCKETIO
    valueFrom:
      configMapKeyRef:
        key: INTEGRATE_SOCKETIO
        name: env
  - name: POSTGRES_DB
    valueFrom:
      configMapKeyRef:
        name: env
        key: POSTGRES_DB
  - name: POSTGRES_HOST
    value: postgres
  - name: POSTGRES_PASSWORD
    valueFrom:
      configMapKeyRef:
        key: POSTGRES_PASSWORD
        name: env
  - name: POSTGRES_USER
    valueFrom:
      configMapKeyRef:
        key: POSTGRES_USER
        name: env
  - name: REDIS_URL
    value: redis://redis:6379/0
  - name: TEST_DATABASE_URL
    valueFrom:
      configMapKeyRef:
        key: TEST_DATABASE_URL
        name: env

# Postgresql confgiuration
postgresql:
  global:
    postgresql:
      postgresqlPassword: ""
      postgresqlDatabase: ""

  persistence:
    enabled: true
    size: 100Mi

redis:
  name: redis
  servicePortHttp: 6379

  master:
    persistence:
      enabled: true
      ## The path the volume will be mounted at, useful when using different
      ## Redis images.
      path: /data
      ## The subdirectory of the volume to mount to, useful in dev environments
      ## and one PV for multiple services.
      subPath: ""
      ## redis data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      accessModes:
      - ReadWriteOnce
      size: 100Mi
  slave:
    persistence:
      enabled: true
      ## The path the volume will be mounted at, useful when using different
      ## Redis images.
      path: /data
      ## The subdirectory of the volume to mount to, useful in dev environments
      ## and one PV for multiple services.
      subPath: ""
      ## redis data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##e
      accessModes:
      - ReadWriteOnce
      size: 100Mi

## Frontend end of open event server
# You need to manually commit and upload it to any register you like
frontend:
  # if the enable is true, the open server front will be enable
  enable: False
  name: open-event-frontend
  replicas: 1
  servicePort: 4000
  exportPort: 4200
  serviceType: NodePort
  serviceName: rest
  repo: eventyay/open-event-frontend
  tag: latest
  imagePullPolicy: Always
  securityContext: {}
  imagePullSecrets: []
